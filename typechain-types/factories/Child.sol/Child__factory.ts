/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BigNumberish, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { Child, ChildInterface } from "../../Child.sol/Child.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_parentName",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "_parentBalance",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_childName",
        "type": "string"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "childName",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getChildInfo",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getParentInfo",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "parentBalance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "parentName",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "sayHello",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b50604051610b4a380380610b4a833981810160405281019061003191906101e3565b8282815f90816100419190610472565b50806001819055505050806002908161005a9190610472565b50505050610541565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100c28261007c565b810181811067ffffffffffffffff821117156100e1576100e061008c565b5b80604052505050565b5f6100f3610063565b90506100ff82826100b9565b919050565b5f67ffffffffffffffff82111561011e5761011d61008c565b5b6101278261007c565b9050602081019050919050565b8281835e5f83830152505050565b5f61015461014f84610104565b6100ea565b9050828152602081018484840111156101705761016f610078565b5b61017b848285610134565b509392505050565b5f82601f83011261019757610196610074565b5b81516101a7848260208601610142565b91505092915050565b5f819050919050565b6101c2816101b0565b81146101cc575f5ffd5b50565b5f815190506101dd816101b9565b92915050565b5f5f5f606084860312156101fa576101f961006c565b5b5f84015167ffffffffffffffff81111561021757610216610070565b5b61022386828701610183565b9350506020610234868287016101cf565b925050604084015167ffffffffffffffff81111561025557610254610070565b5b61026186828701610183565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102b957607f821691505b6020821081036102cc576102cb610275565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261032e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102f3565b61033886836102f3565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61037361036e610369846101b0565b610350565b6101b0565b9050919050565b5f819050919050565b61038c83610359565b6103a06103988261037a565b8484546102ff565b825550505050565b5f5f905090565b6103b76103a8565b6103c2818484610383565b505050565b5b818110156103e5576103da5f826103af565b6001810190506103c8565b5050565b601f82111561042a576103fb816102d2565b610404846102e4565b81016020851015610413578190505b61042761041f856102e4565b8301826103c7565b50505b505050565b5f82821c905092915050565b5f61044a5f198460080261042f565b1980831691505092915050565b5f610462838361043b565b9150826002028217905092915050565b61047b8261026b565b67ffffffffffffffff8111156104945761049361008c565b5b61049e82546102a2565b6104a98282856103e9565b5f60209050601f8311600181146104da575f84156104c8578287015190505b6104d28582610457565b865550610539565b601f1984166104e8866102d2565b5f5b8281101561050f578489015182556001820191506020850194506020810190506104ea565b8683101561052c5784890151610528601f89168261043b565b8355505b6001600288020188555050505b505050505050565b6105fc8061054e5f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c806339bd389e1461006457806339ff9f9c146100845780636356a41e146100a35780637d45436f146100c1578063e652e565146100df578063ef5fb05b146100fd575b5f5ffd5b61006c61011b565b60405161007b939291906104bf565b60405180910390f35b61008c610244565b60405161009a929190610502565b60405180910390f35b6100ab6102dd565b6040516100b89190610530565b60405180910390f35b6100c96102e3565b6040516100d69190610549565b60405180910390f35b6100e761036f565b6040516100f49190610549565b60405180910390f35b6101056103fa565b6040516101129190610549565b60405180910390f35b6060805f60025f60015482805461013190610596565b80601f016020809104026020016040519081016040528092919081815260200182805461015d90610596565b80156101a85780601f1061017f576101008083540402835291602001916101a8565b820191905f5260205f20905b81548152906001019060200180831161018b57829003601f168201915b505050505092508180546101bb90610596565b80601f01602080910402602001604051908101604052809291908181526020018280546101e790610596565b80156102325780601f1061020957610100808354040283529160200191610232565b820191905f5260205f20905b81548152906001019060200180831161021557829003601f168201915b50505050509150925092509250909192565b60605f5f60015481805461025790610596565b80601f016020809104026020016040519081016040528092919081815260200182805461028390610596565b80156102ce5780601f106102a5576101008083540402835291602001916102ce565b820191905f5260205f20905b8154815290600101906020018083116102b157829003601f168201915b50505050509150915091509091565b60015481565b600280546102f090610596565b80601f016020809104026020016040519081016040528092919081815260200182805461031c90610596565b80156103675780601f1061033e57610100808354040283529160200191610367565b820191905f5260205f20905b81548152906001019060200180831161034a57829003601f168201915b505050505081565b5f805461037b90610596565b80601f01602080910402602001604051908101604052809291908181526020018280546103a790610596565b80156103f25780601f106103c9576101008083540402835291602001916103f2565b820191905f5260205f20905b8154815290600101906020018083116103d557829003601f168201915b505050505081565b60606040518060400160405280601081526020017f68656c6c6f2066726f6d206368696c6400000000000000000000000000000000815250905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61047982610437565b6104838185610441565b9350610493818560208601610451565b61049c8161045f565b840191505092915050565b5f819050919050565b6104b9816104a7565b82525050565b5f6060820190508181035f8301526104d7818661046f565b905081810360208301526104eb818561046f565b90506104fa60408301846104b0565b949350505050565b5f6040820190508181035f83015261051a818561046f565b905061052960208301846104b0565b9392505050565b5f6020820190506105435f8301846104b0565b92915050565b5f6020820190508181035f830152610561818461046f565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105ad57607f821691505b6020821081036105c0576105bf610569565b5b5091905056fea26469706673582212207fb1fe54da94dd4f080d2a2e8f4c42950a12cb920c27e840802548872fe6151364736f6c634300081c0033";

  
      type ChildConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: ChildConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Child__factory extends ContractFactory {
    
      constructor(...args: ChildConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_parentName: string, _parentBalance: BigNumberish, _childName: string, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_parentName, _parentBalance, _childName, overrides || {});
    };
    override deploy(_parentName: string, _parentBalance: BigNumberish, _childName: string, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_parentName, _parentBalance, _childName, overrides || {}) as Promise<Child & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Child__factory {
      return super.connect(runner) as Child__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): ChildInterface {
      return new Interface(_abi) as ChildInterface;
    }
    
    override attach(address: string | Addressable): Child {
      return super.attach(address) as Child;
    }
  static connect(address: string, runner?: ContractRunner | null): Child {
      return new Contract(address, _abi, runner) as unknown as Child;
    }
  }

  
  